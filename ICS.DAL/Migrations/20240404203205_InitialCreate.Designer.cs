// <auto-generated />
using System;
using ICS.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ICS.DAL.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20240404203205_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("ICS.DAL.Entities.ActivityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("activityTypeTag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("end")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("room")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("start")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("subjectId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("subjectId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("ICS.DAL.Entities.RatingEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("activityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("points")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("studentId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("activityId");

                    b.HasIndex("studentId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("ICS.DAL.Entities.StudentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("fotoURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ICS.DAL.Entities.SubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("abbreviation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("StudentEntitySubjectEntity", b =>
                {
                    b.Property<Guid>("studentsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("subjectsId")
                        .HasColumnType("TEXT");

                    b.HasKey("studentsId", "subjectsId");

                    b.HasIndex("subjectsId");

                    b.ToTable("StudentSubject", (string)null);
                });

            modelBuilder.Entity("ICS.DAL.Entities.ActivityEntity", b =>
                {
                    b.HasOne("ICS.DAL.Entities.SubjectEntity", "subject")
                        .WithMany("activity")
                        .HasForeignKey("subjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("subject");
                });

            modelBuilder.Entity("ICS.DAL.Entities.RatingEntity", b =>
                {
                    b.HasOne("ICS.DAL.Entities.ActivityEntity", "activity")
                        .WithMany("ratings")
                        .HasForeignKey("activityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICS.DAL.Entities.StudentEntity", "student")
                        .WithMany()
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("activity");

                    b.Navigation("student");
                });

            modelBuilder.Entity("StudentEntitySubjectEntity", b =>
                {
                    b.HasOne("ICS.DAL.Entities.StudentEntity", null)
                        .WithMany()
                        .HasForeignKey("studentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICS.DAL.Entities.SubjectEntity", null)
                        .WithMany()
                        .HasForeignKey("subjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ICS.DAL.Entities.ActivityEntity", b =>
                {
                    b.Navigation("ratings");
                });

            modelBuilder.Entity("ICS.DAL.Entities.SubjectEntity", b =>
                {
                    b.Navigation("activity");
                });
#pragma warning restore 612, 618
        }
    }
}
